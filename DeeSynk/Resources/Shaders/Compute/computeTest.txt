#version 460 core
layout(local_size_x = 1) in;

layout(std430, binding = 1) buffer testIn
{
	vec4 inBuf[];
};

layout(std430, binding = 2) buffer testOut
{
	vec4 outBuf[];
};

layout(binding = 2) uniform Camera
{
	mat4 projection;  //model_view
	vec4 camLocation; //cameraLoc
} camera;

layout(binding = 3) uniform SpotLight
{
	mat4 spotLightView;
	vec4 spotLightLocation;
	vec4 spotLightLookAt;
	vec4 spotLightColor;
	vec4 spotLightFOV;
} spotLights[4];

layout(binding=7) uniform SunLamp
{
	mat4 sunLampView;
	vec4 sunLampLocation;
	vec4 sunLampLookAt;
	vec4 sunLampColor;
	vec4 sunLampViewProps;
} sunLamps[4];


void main() 
{
	uint idx = gl_GlobalInvocationID.x;
	for(int i = 0; i < 4; i++)
	{
		outBuf[idx * 4 + i] = inBuf[idx * 4 + i] * 2;
		//outBuf(idx * 4 + i) = vec4(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y, gl_GlobalInvocationID.z, 0.0)
	}
}