#version 450 core

layout (location = 0) in vec4 position;
layout (location = 1) in vec3 normal;
layout (location = 13) uniform mat4 modelMat;

layout(binding = 2) uniform Camera
{
	mat4 projection;  //model_view
	vec4 camLocation; //cameraLoc
} camera;

layout(binding = 3) uniform SpotLight
{
	mat4 spotLightView;
	vec4 spotLightLocation;
	vec4 spotLightLookAt;
	vec4 spotLightColor;
	vec4 spotLightFOV;
} spotLights[4];

layout(binding=7) uniform SunLamp
{
	mat4 sunLampView;
	vec4 sunLampLocation;
	vec4 sunLampLookAt;
	vec4 sunLampColor;
	vec4 sunLampViewProps;
} sunLamps[4];

out vs_Out
{
	vec3 vs_normal;
} vs_out;

void main(void)
{
    mat4 mmN = inverse(modelMat);
	mmN[3] = vec4(0.0,0.0,0.0,1.0);
	mmN = inverse(mmN);

	vs_out.vs_normal = (mmN * vec4(normal, 1.0)).xyz;

	gl_Position = camera.projection * modelMat * position;
}