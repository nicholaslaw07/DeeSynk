#version 450 core

layout (location = 0) in vec4 position;
layout (location = 2) in vec4 color;
layout (location = 3) in vec4 offset;
layout (location = 5) uniform mat4 model_view;
layout (location = 13) uniform mat4 modelMat;

//UBO_BINDINGS

layout(binding = 11) uniform PostCamera
{
	mat4 projection;  //model_view
	vec4 location; //cameraLoc
} postCamera;

layout(binding = 15) uniform Camera
{
	mat4 projection;  //model_view
	vec4 location; //cameraLoc
} camera;

//out vec2 vs_texCoord;
out vec4 vs_color;
out vec4 vs_pos;
out vec4 vs_offset;

void main(void)
{
 vs_color = color;
 vs_offset = offset;
 //vs_texCoord = texCoord;
 vs_pos = camera.projection * modelMat * (position);
 gl_Position = camera.projection * modelMat * (position);
}