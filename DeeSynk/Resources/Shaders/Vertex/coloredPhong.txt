#version 450 core

layout (location = 0) in vec4 position;
layout (location = 1) in vec4 color;
layout (location = 3) in vec4 normal;
layout (location = 4) in vec3 cameraLoc;
layout (location = 5) uniform mat4 model_view;
out vec4 vs_color;



void main(void)
{
	vec3 light = vec3(20, 20, 20);

	vec3 iA = vec3(1.0, 0.0, 0.0);
	vec3 iD = vec3(1.0, 1.0, 1.0);
	vec3 iS = vec3(1.0, 1.0, 1.0);

	float kA = 0.2;
	float kD = 1.0;
	float kS = 1.0;

	float a  = 2;

	vec3 Lm = normalize(light - position.xyz);
	vec3 N  = normalize(normal.xyz);
	vec3 Rm = 2 * (dot(Lm, N)) * N - Lm;
	Rm = normalize(Rm);
	vec3 V  = normalize(cameraLoc);

	vec3 p2 = dot(Rm, V) * N - Lm;
	float p3 = dot(Lm, N); 

	vec3 outColor = normalize(iA * kA + vec3(p3, p3, p3));

	if(p2.x > -1000000){ outColor = vec3(0.0, 0.0, 1.0);
	}
	
	vs_color = vec4(outColor, 1.0);

    gl_Position = model_view * vec4(position.x, position.y, position.z, 1);
}