#version 450 core

layout (location = 0) in vec4 position;
layout (location = 1) in vec4 color;
layout (location = 2) in vec4 offset;
layout (location = 3) in vec3 normal;
layout (location = 4) uniform vec3 cameraLoc;
layout (location = 5) uniform mat4 model_view;
out vec4 vs_color;



void main(void)
{
	vec3 light = vec3(20, 20, 20);

	vec3 iA = color.xyz / 5;
	vec3 iD = color.xyz;
	vec3 iS = vec3(1.0, 1.0, 1.0);

	float kA = 0.2;
	float kD = 1.0;
	float kS = 1.0;

	float a  = 25;

	vec3 Lm = normalize(light - position.xyz + offset.xyz);
	vec3 N  = normal;
	vec3 Rm = normalize(2 * (dot(Lm, N)) * N - Lm);
	vec3 V  = normalize(cameraLoc - offset.xyz);

	float dDot = dot(Lm, N);
	float sDot = dot(Rm, V);

	vec3 Ip = kA * iA;

	if(dDot > 0)
	{
		Ip += kD * dDot * iD;
	}

	if(sDot > 0)
	{
		Ip += kS * pow(sDot, a) * iS;
	}

	vec3 outColor = Ip;
	
	vs_color = vec4(outColor, 1.0);

    gl_Position = model_view * (vec4(position.x, position.y, position.z, 1) + offset);
}