#version 450 core

layout (location = 0) in vec4 position;
layout (location = 2) in vec2 texCoord;
layout (location = 3) in vec4 offset;
layout (location = 13) uniform mat4 modelMat;

//UBO_BINDINGS
layout(binding = 2) uniform Camera
{
	mat4 projection;  //model_view
	vec4 location; //cameraLoc
} camera;

layout(binding = 3) uniform Light
{
	mat4 view;
	vec4 lightLocation;
	vec4 lightColor;
	vec4 shadowColor;
} lights[4];

//OUTS
out vec2 vs_texCoord;
out vec4 vs_lightCoord;

void main(void)
{
 vs_texCoord = texCoord;
 vs_lightCoord = lights[0].view * modelMat * (- position - offset);

 gl_Position = camera.projection * modelMat * (position + offset);
}