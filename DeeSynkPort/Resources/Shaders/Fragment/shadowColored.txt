#version 450 core

in vec4 vs_color;
in vec4 vs_lightCoord;
layout(binding=0) uniform sampler2D tex;
layout(binding=1) uniform sampler2D shadow;
layout(binding=2) uniform sampler2D shadowTest;
out vec4 color;

float ShadowFactor(vec4 lightCoord)
{
	vec3 ProjCoords = lightCoord.xyz / lightCoord.w;
	vec2 UVCoords;
	UVCoords.x = 0.5 * (ProjCoords.x) + 0.5;
	UVCoords.y = 0.5 * (ProjCoords.y) + 0.5;
	float z = 0.5 * ProjCoords.z + 0.5;
	float Depth = texture(shadow, UVCoords).x;
	if(Depth < (z-0.01))
		return 0.5;
	else 
		return 1.0;
}

float SF(vec4 lightCoord)
{
	vec3 ProjCoords = lightCoord.xyz / lightCoord.w;
	vec2 UVCoords;
	UVCoords.x = 0.5 * ProjCoords.x + 0.5;
	UVCoords.y = 0.5 * ProjCoords.y + 0.5;
	float z = 0.5 * ProjCoords.z + 0.5;
	float Depth = texture(shadow, UVCoords).x;
	return Depth - z;
}

void main(void)
{

	//vec3 c = texture(tex, vs_texCoord).xyz * ShadowFactor(vs_lightCoord);
	//color =  vec4(vec3(UVCoords, 0.0), Depth);
	vec4 c = vs_color * ShadowFactor(vs_lightCoord);
	//c.a = SF(vs_lightCoord);
	color = c;
	//if()
	//color = vec4(z, z, z, Depth);
}